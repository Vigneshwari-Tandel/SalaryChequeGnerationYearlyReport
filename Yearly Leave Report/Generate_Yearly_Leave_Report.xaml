<Activity mc:Ignorable="sap sap2010" x:Class="Generate_Yearly_Leave_Report" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_localFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_Year" Type="InArgument(x:String)" />
    <x:Property Name="out_YearlyLeaveReportExcel" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1208,4920</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Generate_Yearly_Leave_Report_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="38">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>BalaReva.EasyExcel.Main</x:String>
      <x:String>BalaReva.EasyExcel.Utilities</x:String>
      <x:String>BalaReva.EasyExcel.Base</x:String>
      <x:String>BalaReva.EasyExcel.Sheets</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="64">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel.Utilities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Generate_Yearly_Leave_Report" sap:VirtualizedContainerService.HintSize="1099,4855" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_YearlyLeaveReport" />
      <Variable x:TypeArguments="x:String" Name="monthlyLeaveFolder" />
      <Variable x:TypeArguments="x:Boolean" Name="yearlyLeaveReportExists" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="yearlyLeaveReportWorkbook" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="maxCasualLeave" />
      <Variable x:TypeArguments="x:String" Name="yearlyReportSheet" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_monthlyLeaveData" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="monthlyLeaveSheetName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Generate Yearly Leave Report execution started" sap:VirtualizedContainerService.HintSize="1057,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Generate Yearly Leave Report execution started&quot;]" />
    <Assign sap2010:Annotation.AnnotationText="Set location and name for Yearly excel file" DisplayName="Assign - Yearly leave report file location to variable" sap:VirtualizedContainerService.HintSize="1057,91" sap2010:WorkflowViewState.IdRef="Assign_10">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_YearlyLeaveReportExcel]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_localFolderPath + "YearlyLeaveReport/" + "YearlyLeaveReport_" + in_Year + ".xlsx"]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:PathExists DisplayName="Path Exists - Yearly leave report" Exists="[yearlyLeaveReportExists]" sap:VirtualizedContainerService.HintSize="1057,89" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[out_YearlyLeaveReportExcel]" PathType="File" />
    <If Condition="[yearlyLeaveReportExists]" DisplayName="If - Yearly Leave Report Excel exists " sap:VirtualizedContainerService.HintSize="1057,4241" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:LogMessage DisplayName="Log Message - File already exists" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[out_YearlyLeaveReportExcel + &quot; file already exists.&quot;]" />
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Sequence - Create yearly leave report file" sap:VirtualizedContainerService.HintSize="678,4083" sap2010:WorkflowViewState.IdRef="Sequence_15">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:BuildDataTable sap2010:Annotation.AnnotationText="Build data table to store yearly report data" DataTable="[dt_YearlyLeaveReport]" DisplayName="Build Data Table - Yearly Leave Report" sap:VirtualizedContainerService.HintSize="636,90" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;DepartmentName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Total_x0020_Number_x0020_Of_x0020_Sick_x0020_Leave&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Total_x0020_Number_x0020_Of_x0020_Casual_x0020_Leave&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:BuildDataTable>
          <Assign DisplayName="Assign - Local folder path" sap:VirtualizedContainerService.HintSize="636,60" sap2010:WorkflowViewState.IdRef="Assign_12">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[monthlyLeaveFolder]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_localFolderPath + "YearlyLeaveReport/"]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEachFileX DisplayName="For Each File in Folder monthly leave report" Folder="[monthlyLeaveFolder]" sap:VirtualizedContainerService.HintSize="636,2741" sap2010:WorkflowViewState.IdRef="ForEachFileX_2" IncludeSubDirectories="True" OrderBy="CreationDateOldFirst">
            <ui:ForEachFileX.Body>
              <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                <ActivityAction.Argument1>
                  <DelegateInArgument x:TypeArguments="si:FileInfo" Name="File" />
                </ActivityAction.Argument1>
                <ActivityAction.Argument2>
                  <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                </ActivityAction.Argument2>
                <Sequence DisplayName="Do - For Each File in Folder monthly leave report" sap:VirtualizedContainerService.HintSize="602,2512" sap2010:WorkflowViewState.IdRef="Sequence_19">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="ui:WorkbookApplication" Name="monthlyLeaveWorkbook" />
                    <Variable x:TypeArguments="x:String" Name="departmentName" />
                    <Variable x:TypeArguments="x:Int32" Name="index" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope - Connect with SharePoint" sap:VirtualizedContainerService.HintSize="560,322" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" Visible="False" Workbook="[monthlyLeaveWorkbook]" WorkbookPath="[File.FullName]">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do of Excel Application Scope - Connect with SharePoint" sap:VirtualizedContainerService.HintSize="376,213" sap2010:WorkflowViewState.IdRef="Sequence_16">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets from monthly leave reports" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_2" Sheets="[monthlyLeaveSheetName]" />
                          <ui:ExcelReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dt_monthlyLeaveData]" DisplayName="Read Range - Monthly leave report" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="[monthlyLeaveSheetName(0)]" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                  </ui:ExcelApplicationScope>
                  <ui:ExcelCloseWorkbook DisplayName="Close Workbook -  Monthly leave report" sap:VirtualizedContainerService.HintSize="560,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_3" Workbook="[monthlyLeaveWorkbook]" />
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="[index]" DataTable="[dt_monthlyLeaveData]" DisplayName="For Each Row in monthly leave data table" sap:VirtualizedContainerService.HintSize="560,1959" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="departmentRow" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body of For Each Row in monthly data table" sap:VirtualizedContainerService.HintSize="526,1840" sap2010:WorkflowViewState.IdRef="Sequence_18">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Int32" Name="monthlySickLeave" />
                            <Variable x:TypeArguments="x:Int32" Name="monthlyCasualLeave" />
                            <Variable x:TypeArguments="x:Int32" Name="totalSickLeave" />
                            <Variable x:TypeArguments="x:Int32" Name="totalCasualLeave" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign - Department Name in variable" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[departmentName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[departmentRow.Item("DepartmentName").ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If Condition="[Not dt_YearlyLeaveReport.AsEnumerable().Any(Function(x) x(&quot;DepartmentName&quot;).ToString = departmentName)]" sap:VirtualizedContainerService.HintSize="484,371" sap2010:WorkflowViewState.IdRef="If_5">
                            <If.Then>
                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{departmentName, 0, 0}]" DataTable="[dt_YearlyLeaveReport]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="420,83" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                          <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" sap2010:Annotation.AnnotationText="Lookup for salary of perticular department in yearly data table " DataTable="[dt_YearlyLeaveReport]" DisplayName="Lookup Data Table - for Sick Leave" sap:VirtualizedContainerService.HintSize="484,333" sap2010:WorkflowViewState.IdRef="LookupDataTable_3" LookupColumnName="DepartmentName" LookupValue="[departmentName]" TargetColumnName="Total Number Of Sick Leave">
                            <ui:LookupDataTable.CellValue>
                              <OutArgument x:TypeArguments="x:Int32">[monthlySickLeave]</OutArgument>
                            </ui:LookupDataTable.CellValue>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:LookupDataTable>
                          <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" sap2010:Annotation.AnnotationText="Lookup for salary of perticular department in yearly data table " DataTable="[dt_YearlyLeaveReport]" DisplayName="Lookup Data Table - for Casual Leave" sap:VirtualizedContainerService.HintSize="484,333" sap2010:WorkflowViewState.IdRef="LookupDataTable_4" LookupColumnName="DepartmentName" LookupValue="[departmentName]" TargetColumnName="Total Number Of Casual Leave">
                            <ui:LookupDataTable.CellValue>
                              <OutArgument x:TypeArguments="x:Int32">[monthlyCasualLeave]</OutArgument>
                            </ui:LookupDataTable.CellValue>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:LookupDataTable>
                          <Assign DisplayName="Assign - Calculate Sick Leave" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[totalSickLeave]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[CInt(departmentRow.Item("Total Number Of Sick Leave")) + CInt(monthlySickLeave)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign - Calculate Casual Leave" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[totalCasualLeave]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[CInt(departmentRow.Item("Total Number Of Casual Leave")) + CInt(monthlyCasualLeave)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign - Write total sick leave in data table" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[dt_YearlyLeaveReport.Rows(index)("Total Number Of Sick Leave")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[totalSickLeave]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign - Write total casual leave in data table" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[dt_YearlyLeaveReport.Rows(index)("Total Number Of Casual Leave")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[totalCasualLeave]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message - added leaves" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;In &quot; + departmentName + &quot; total &quot; + departmentRow.Item(&quot;Total Number Of Sick Leave&quot;).ToString + &quot; Sick leave and total &quot; + departmentRow.Item(&quot;Total Number Of Casual Leave&quot;).ToString + &quot; Casual leave are added.&quot;]" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEachRow>
                </Sequence>
              </ActivityAction>
            </ui:ForEachFileX.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachFileX>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope - Create yearly Leave excel and write data table" sap:VirtualizedContainerService.HintSize="636,388" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" Visible="False" Workbook="[yearlyLeaveReportWorkbook]" WorkbookPath="[out_YearlyLeaveReportExcel]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do of Excel Application Scope - Create yearly Leave excel and write data table" sap:VirtualizedContainerService.HintSize="376,279" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign - Sheet Name" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[yearlyReportSheet]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[in_Year + " Yearly Leave Report"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ExcelWriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dt_YearlyLeaveReport]" DisplayName="Write Range - Yearly Leave Data Table" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="[yearlyReportSheet]" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook -  Yearly Leave Excel" sap:VirtualizedContainerService.HintSize="636,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[yearlyLeaveReportWorkbook]" />
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Read yearly leave report Excel file and generate column chart.&#xA;&#xA;Four In-Type Arguments are used,&#xA;1. in_yearlyLeaveReport, 2. in_yearlyReportSheet,&#xA;3. in_dt_LeaveReport, 4. in_Year." DisplayName="Invoke GenerateLeaveReportColumnChart workflow" sap:VirtualizedContainerService.HintSize="636,199" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Yearly Leave Report\GenerateLeaveReportColumnChart.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_Year">[in_Year]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_yearlyReportSheet">[yearlyReportSheet]</InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_LeaveReport">[dt_YearlyLeaveReport]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_yearlyLeaveReport">[out_YearlyLeaveReportExcel]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Highlight department font with Red color which has highest casual leave. &#xA;&#xA;Three In-Type Arguments are used.&#xA;1. in_YearlyLeaveReportExcel, 2. in_YearlySheetName,&#xA;3. in_dt_YearlyLeaveReport." DisplayName="Invoke Highlight_Highest_Casual_Leave workflow" sap:VirtualizedContainerService.HintSize="636,214" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Yearly Leave Report\Highlight_Highest_Casual_Leave.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_YearlyLeaveReportExcel">[out_YearlyLeaveReportExcel]</InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_YearlyLeaveReport">[dt_YearlyLeaveReport]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_yearlyReportSheet">[yearlyReportSheet]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message - Yearly leave report execution ended." sap:VirtualizedContainerService.HintSize="1057,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Yearly leave report execution ended.&quot;]" />
  </Sequence>
</Activity>